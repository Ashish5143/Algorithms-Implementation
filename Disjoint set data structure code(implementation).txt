#include <iostream>
using namespace std;

int parent[100000];
int rank[100000];

void makeset()
{
    for(int i = 1; i <= n; i++) {
        parent[i] = i;
        rank[i] = 0;
    }
}

int findpar(int node)
{
    if(node == parent[node]) {
        return node;
    }
    return parent[node] = findpar(parent[node]);
}

void union(int u, int v) {
    u = findpar(u);
    v = findpar(v);
    if(rank[u] < rank[v]) {
        parent[u] = v;
    }
    else if(rank[v] < rank[u]) {
        parent[v] = u;
    }
    else {
        parent[v] = u;
        rank[u]++;
    }
}

void main() {
    makeset();
    int m;
    cin>>m;
    while(m--) {
        int u, v;
        union(u, v);
    }
    

used in - 
1) Krushkal MST
2)Cycle detection
3)Job sequencing
4)Number of pairs
5)City with smallest number of neighbours at a threshold distance